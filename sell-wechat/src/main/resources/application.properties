server.port=9050
dubbo1.application.name=wechat-provider
dubbo1.registry.address=@dubbo.registry.address@
dubbo1.protocol.name=dubbo
dubbo1.protocol.port=22790
# 这是要发布到dubbo的接口实现位置
#dubbo.scan=com.jellyfish.sell.wechat.service
logging.level.root=info
wx.openAppId=wx05975fb4d3b4dd09
wx.openAppSecret=6e58c8dc9f92f1e03aef9457cfad7f2e
wx.openAppToken=MCHID1524093801TOKEN
#关注回复
wx.openAppReply=\u611F\u8C22\u60A8\u7684\u5173\u6CE8\uFF01\n1\u3001\u4E3A\u4E86\u63D0\u73B0\u987A\u5229\u8BF7\u4E0D\u8981\u53D6\u5173\uFF01\n2\u3001\u4E0D\u9700\u8981\u5728\u672C\u516C\u4F17\u53F7\u505A\u8D26\u53F7\u7ED1\u5B9A\uFF0C\u8BF7\u8FD4\u56DEAPP\u5185\u63D0\u73B0\uFF01\n\u795D\u60A8\u751F\u6D3B\u6109\u5FEB\uFF01
#发送消息回复
wx.openAppReplyTxt=\u8C22\u8C22\u60A8\u7684\u5173\u5FC3~
wx.appId=wx16ced9ae9187ffe9
wx.appSecret=801928e5e2419e900bb1f6ea28178007
wx.mchId=1527071281
wx.notify_url=http://wechat.coffee99.cn/lotto/wechat/notify.do
wx.refund_url=http://wechat.coffee99.cn/lotto/wechat/refundNotify.do
wx.mchKey=eb4c09247e19860901c02edce69f6a4f
wx.template.produce=@wx.template.produce@
wx.template.pay=@wx.template.pay@
wx.template.refund=@wx.template.refund@
wx.template.open=@wx.template.open@
wx.template.prize=@wx.template.prize@
wx.template.delivery=@wx.template.delivery@
wx.template.sign=@wx.template.sign@
wx.template.callback=@wx.template.callback@
wx.template.activity=@wx.template.activity@
wx.certPath=@wx.certPath@
wx.spbill_create_ip=@wx.spbill_create_ip@
tx.manager.url=@tx.manager.url@
wx.mchCustomsNo=@wx.mchCustomsNo@
#dubbo.scan=com.jellyfish.sell.order.service
#DataSource配置
spring.datasource.name=datasource
spring.datasource.url=@jdbc.url@
spring.datasource.username=@jdbc.username@
spring.datasource.password=@jdbc.password@
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.filters=stat
spring.datasource.maxActive=20
spring.datasource.initialSize=1
spring.datasource.maxWait=60000
spring.datasource.minIdle=1
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
Thread.corePoolSize=20
Thread.maximumPoolSize=100
Thread.queueSize=1024
#DataSource配置
spring.redis.host=@redis.host@
spring.redis.port=@redis.port@
spring.redis.database=0
spring.redis.password=@redis.password@

# pool settings ...\u6C60\u914D\u7F6E
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=2000
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

#Mybatis配置
mybatis-plus.mapper-locations=classpath*:config/mybatis/*.xml
mybatis-plus.type-aliases-package=com.jellyfish.sell.*.entity.*
mybatis-plus.check-config-location=true
mybatis-plus.configuration.aggressive-lazy-loading=true
mybatis-plus.configuration.multipleResultSetsEnabled=true
mybatis-plus.configuration.mapUnderscoreToCamelCase=true
mybatis-plus.configuration.useColumnLabel=true
mybatis-plus.configuration.defaultExecutorType=REUSE
mybatis-plus.configuration.defaultStatementTimeout=25000